{"version":3,"sources":["mopidy-js/mopidy.js","components/footer/playbackButtons.js","utils.js","components/footer/playbackSlider.js","components/footer/volumeSlider.js","actions.js","components/footer/index.js","components/sidePanel.js","components/tracklist.js","components/library.js","components/controlPanel.js","App.js","serviceWorker.js","index.js"],"names":["EventEmitter","require","WebSocket","snakeToCamel","name","replace","match","toUpperCase","Mopidy","settings","_console","_getConsole","_settings","_configure","_backoffDelay","backoffDelayMin","_pendingRequests","_webSocket","_delegateEvents","autoConnect","connect","console","con","log","warn","error","newSettings","protocol","document","location","currentHost","host","webSocketUrl","backoffDelayMax","this","removeAllListeners","on","_cleanup","_handleWebSocketError","_handleMessage","_resetBackoffDelay","_getApiSpec","_reconnect","length","arg","Error","removeListener","readyState","OPEN","close","webSocket","onclose","emit","onerror","onopen","onmessage","message","Object","keys","closeEvent","forEach","requestId","reject","ConnectionError","timeToAttempt","setTimeout","off","stack","CONNECTING","Promise","CLOSING","CLOSED","resolve","jsonRpcMessage","jsonrpc","id","_nextRequestId","send","JSON","stringify","data","parse","hasOwnProperty","call","_handleResponse","_handleEvent","SyntaxError","responseMessage","result","ServerError","code","response","eventMessage","event","eventName","_send","method","then","_createApi","bind","catch","methods","fullMethodName","methodPath","fullName","path","split","slice","getPath","methodName","object","objPath","parentObj","objName","camelObjName","createObjects","args","Array","isArray","params","TypeError","description","prototype","lastUsed","PlaybackButtons","state","mopidy","ButtonGroup","Button","onClick","playback","previous","fontSize","pause","play","next","duration_to_human","ms","undefined","s_total","Math","ceil","s","s_str","obj_reducer","obj","prop_name","uriHumanList","searchBlacklist","PlaybackSlider","time_position","track_length","dispatch","style","display","flexDirection","alignItems","Slider","value","onChange","newValue","type","target","onChangeCommitted","seek","max","valueLabelDisplay","valueLabelFormat","flex","marginRight","marginLeft","LinearProgress","VolumeSlider","volume","mixer","setVolume","fetchPlaybackInfo","a","to_dispatch","fun_path","base","all","map","reduce","fun","res","assign","initMopidyEventsDispatcher","tracklist","getTlTracks","getVolume","library","browse","uri","getUriSchemes","schemes","track","tl_track","makeMopidyDispatcher","getState","TrackInfo","album","artist","artists","Footer","tltrack","time_position_updater","updating","seek_update_interval","pending","width","margin","marginTop","marginBottom","paddingLeft","paddingRight","playback_state","persistant","SearchPopOver","searchUris","closePopover","initialSelecterUri","localStorage","getItem","useState","selectedUri","setSelectedUri","input","setInput","triggerSearch","key","uris","search","query","any","search_result","children","item","tracks","expanded","TextField","variant","onKeyPress","autoFocus","FormControl","Select","native","setItem","uriHuman","MopidyStatus","pendingRequestsNb","connected","CircularProgress","size","thickness","color","uri_schemes","anchorEl","useRef","open","setOpen","filter","includes","orientation","height","ref","Popover","current","onClose","anchorOrigin","vertical","horizontal","transformOrigin","TracklistListPanel","current_tlid","list","setList","tag","List","overflow","maxHeight","padding","group","pull","put","onEnd","e","move","start","oldIndex","end","to_position","newIndex","tracklistSwap","ListItem","tlid","className","ListItemText","track_no","itemToText","ListItemIcon","remove","criteria","TracklistInfoPanel","Tooltip","title","clear","TracklistPanel","isLeaf","node","__model__","rec_expand_file","lib_items","lib_item","playlists","getItems","uri_expanded","flat","expand_file","data_raw","i","addToTracklist","at_position","add","NodeLeaves","depth","tl_length","disable_buttons","to_object","dropTo","to","child","Fragment","paddingTop","paddingBottom","asList","items","toggleNode","verticalAlign","getIcon","lib_tree","mopidy_ws","set_mopidy_ws","set_seek_update_interval","noValidate","autoComplete","label","InputLabelProps","shrink","AppContainer","minHeight","connecting","activePanel","active_panel","Boolean","window","hostname","default_playback","last_update","lib_populate","children_w_path","lib_add_children","mode","prev_children","new_children","lib_toggle_expanded","lib_set_expanded","defaultSettings","schema","getDefaultWS","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","action","res_target","Date","valueOf","time_position_updater_new","now","elapsed","selected_uri","new_lib_tree","toString","$mopidy","applyMiddleware","thunk","$store","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7c733895.chunk.js","sourcesContent":["/*\nMopidy-js from https://github.com/mopidy/mopidy.js\n*/\n\n\nconst EventEmitter = require(\"events\");\nconst WebSocket = require(\"isomorphic-ws\");\n\nfunction snakeToCamel(name) {\n  return name.replace(/(_[a-z])/g, match =>\n    match.toUpperCase().replace(\"_\", \"\")\n  );\n}\n\nclass Mopidy extends EventEmitter {\n  constructor(settings) {\n    super();\n    this._console = this._getConsole(settings || {});\n    this._settings = this._configure(settings || {});\n    this._backoffDelay = this._settings.backoffDelayMin;\n    this._pendingRequests = {};\n    this._webSocket = null;\n    this._delegateEvents();\n    if (this._settings.autoConnect) {\n      this.connect();\n    }\n  }\n\n  _getConsole(settings) {\n    if (typeof settings.console !== \"undefined\") {\n      return settings.console;\n    }\n    const con = (typeof console !== \"undefined\" && console) || {};\n    con.log = con.log || (() => {});\n    con.warn = con.warn || (() => {});\n    con.error = con.error || (() => {});\n    return con;\n  }\n\n  _configure(settings) {\n    const newSettings = { ...settings };\n    const protocol =\n      typeof document !== \"undefined\" && document.location.protocol === \"https:\"\n        ? \"wss://\"\n        : \"ws://\";\n    const currentHost =\n      (typeof document !== \"undefined\" && document.location.host) ||\n      \"localhost\";\n    newSettings.webSocketUrl =\n      settings.webSocketUrl || `${protocol}${currentHost}/mopidy/ws`;\n    if (settings.autoConnect !== false) {\n      newSettings.autoConnect = true;\n    }\n    newSettings.backoffDelayMin = settings.backoffDelayMin || 1000;\n    newSettings.backoffDelayMax = settings.backoffDelayMax || 64000;\n    return newSettings;\n  }\n\n  _delegateEvents() {\n    // Remove existing event handlers\n    this.removeAllListeners(\"websocket:close\");\n    this.removeAllListeners(\"websocket:error\");\n    this.removeAllListeners(\"websocket:incomingMessage\");\n    this.removeAllListeners(\"websocket:open\");\n    this.removeAllListeners(\"state:offline\");\n    // Register basic set of event handlers\n    this.on(\"websocket:close\", this._cleanup);\n    this.on(\"websocket:error\", this._handleWebSocketError);\n    this.on(\"websocket:incomingMessage\", this._handleMessage);\n    this.on(\"websocket:open\", this._resetBackoffDelay);\n    this.on(\"websocket:open\", this._getApiSpec);\n    this.on(\"state:offline\", this._reconnect);\n  }\n\n  off(...args) {\n    if (args.length === 0) {\n      this.removeAllListeners();\n    } else if (args.length === 1) {\n      const arg = args[0];\n      if (typeof arg === \"string\") {\n        this.removeAllListeners(arg);\n      } else {\n        throw Error(\n          \"Expected no arguments, a string, or a string and a listener.\"\n        );\n      }\n    } else {\n      this.removeListener(...args);\n    }\n  }\n\n  connect() {\n    if (this._webSocket) {\n      if (this._webSocket.readyState === Mopidy.WebSocket.OPEN) {\n        return;\n      }\n      this._webSocket.close();\n    }\n\n    this._webSocket =\n      this._settings.webSocket ||\n      new Mopidy.WebSocket(this._settings.webSocketUrl);\n\n    this._webSocket.onclose = close => {\n      this.emit(\"websocket:close\", close);\n    };\n    this._webSocket.onerror = error => {\n      this.emit(\"websocket:error\", error);\n    };\n    this._webSocket.onopen = () => {\n      this.emit(\"websocket:open\");\n    };\n    this._webSocket.onmessage = message => {\n      this.emit(\"websocket:incomingMessage\", message);\n        this.emit(\"requests:count\", Object.keys(this._pendingRequests).length)\n    };\n  }\n\n  _cleanup(closeEvent) {\n    Object.keys(this._pendingRequests).forEach(requestId => {\n      const { reject } = this._pendingRequests[requestId];\n      delete this._pendingRequests[requestId];\n      const error = new Mopidy.ConnectionError(\"WebSocket closed\");\n      error.closeEvent = closeEvent;\n      reject(error);\n    });\n    this.emit(\"state\", \"state:offline\");\n    this.emit(\"state:offline\");\n  }\n\n  _reconnect() {\n    this.emit(\"state\", \"reconnectionPending\", {\n      timeToAttempt: this._backoffDelay,\n    });\n    this.emit(\"reconnectionPending\", {\n      timeToAttempt: this._backoffDelay,\n    });\n    setTimeout(() => {\n      this.emit(\"state\", \"reconnecting\");\n      this.emit(\"reconnecting\");\n      this.connect();\n    }, this._backoffDelay);\n    this._backoffDelay = this._backoffDelay * 2;\n    if (this._backoffDelay > this._settings.backoffDelayMax) {\n      this._backoffDelay = this._settings.backoffDelayMax;\n    }\n  }\n\n  _resetBackoffDelay() {\n    this._backoffDelay = this._settings.backoffDelayMin;\n  }\n\n  close() {\n    this.off(\"state:offline\", this._reconnect);\n    if (this._webSocket) {\n      this._webSocket.close();\n    }\n  }\n\n  _handleWebSocketError(error) {\n    this._console.warn(\"WebSocket error:\", error.stack || error);\n  }\n\n  _send(message) {\n    switch (this._webSocket.readyState) {\n      case Mopidy.WebSocket.CONNECTING:\n        return Promise.reject(\n          new Mopidy.ConnectionError(\"WebSocket is still connecting\")\n        );\n      case Mopidy.WebSocket.CLOSING:\n        return Promise.reject(\n          new Mopidy.ConnectionError(\"WebSocket is closing\")\n        );\n      case Mopidy.WebSocket.CLOSED:\n        return Promise.reject(\n          new Mopidy.ConnectionError(\"WebSocket is closed\")\n        );\n      default:\n        return new Promise((resolve, reject) => {\n          const jsonRpcMessage = {\n            ...message,\n            jsonrpc: \"2.0\",\n            id: this._nextRequestId(),\n          };\n          this._pendingRequests[jsonRpcMessage.id] = { resolve, reject };\n          this._webSocket.send(JSON.stringify(jsonRpcMessage));\n            this.emit(\"websocket:outgoingMessage\", jsonRpcMessage);\n            this.emit(\"requests:count\", Object.keys(this._pendingRequests).length)\n        });\n    }\n  }\n\n  _handleMessage(message) {\n    try {\n      const data = JSON.parse(message.data);\n      if (Object.hasOwnProperty.call(data, \"id\")) {\n        this._handleResponse(data);\n      } else if (Object.hasOwnProperty.call(data, \"event\")) {\n        this._handleEvent(data);\n      } else {\n        this._console.warn(\n          `Unknown message type received. Message was: ${message.data}`\n        );\n      }\n    } catch (error) {\n      if (error instanceof SyntaxError) {\n        this._console.warn(\n          `WebSocket message parsing failed. Message was: ${message.data}`\n        );\n      } else {\n        throw error;\n      }\n    }\n  }\n\n  _handleResponse(responseMessage) {\n    if (\n      !Object.hasOwnProperty.call(this._pendingRequests, responseMessage.id)\n    ) {\n      this._console.warn(\n        \"Unexpected response received. Message was:\",\n        responseMessage\n      );\n      return;\n    }\n    const { resolve, reject } = this._pendingRequests[responseMessage.id];\n    delete this._pendingRequests[responseMessage.id];\n    if (Object.hasOwnProperty.call(responseMessage, \"result\")) {\n      resolve(responseMessage.result);\n    } else if (Object.hasOwnProperty.call(responseMessage, \"error\")) {\n      const error = new Mopidy.ServerError(responseMessage.error.message);\n      error.code = responseMessage.error.code;\n      error.data = responseMessage.error.data;\n      reject(error);\n      this._console.warn(\"Server returned error:\", responseMessage.error);\n    } else {\n      const error = new Error(\"Response without 'result' or 'error' received\");\n      error.data = { response: responseMessage };\n      reject(error);\n      this._console.warn(\n        \"Response without 'result' or 'error' received. Message was:\",\n        responseMessage\n      );\n    }\n  }\n\n  _handleEvent(eventMessage) {\n    const data = { ...eventMessage };\n    delete data.event;\n    const eventName = `event:${snakeToCamel(eventMessage.event)}`;\n    this.emit(\"event\", eventName, data);\n    this.emit(eventName, data);\n  }\n\n  _getApiSpec() {\n    return this._send({ method: \"core.describe\" })\n      .then(this._createApi.bind(this))\n      .catch(this._handleWebSocketError.bind(this));\n  }\n\n  _createApi(methods) {\n    const caller = method => (...args) => {\n      const message = { method };\n      if (args.length === 0) {\n        return this._send(message);\n      }\n      if (args.length > 1) {\n        return Promise.reject(\n          new Error(\n            \"Expected zero arguments, a single array, or a single object.\"\n          )\n        );\n      }\n      if (!Array.isArray(args[0]) && args[0] !== Object(args[0])) {\n        return Promise.reject(new TypeError(\"Expected an array or an object.\"));\n      }\n      [message.params] = args;\n      return this._send(message);\n    };\n\n    const getPath = fullName => {\n      let path = fullName.split(\".\");\n      if (path.length >= 1 && path[0] === \"core\") {\n        path = path.slice(1);\n      }\n      return path;\n    };\n\n    const createObjects = objPath => {\n      let parentObj = this;\n      objPath.forEach(objName => {\n        const camelObjName = snakeToCamel(objName);\n        parentObj[camelObjName] = parentObj[camelObjName] || {};\n        parentObj = parentObj[camelObjName];\n      });\n      return parentObj;\n    };\n\n    const createMethod = fullMethodName => {\n      const methodPath = getPath(fullMethodName);\n      const methodName = snakeToCamel(methodPath.slice(-1)[0]);\n      const object = createObjects(methodPath.slice(0, -1));\n      object[methodName] = caller(fullMethodName);\n      object[methodName].description = methods[fullMethodName].description;\n      object[methodName].params = methods[fullMethodName].params;\n    };\n\n    Object.keys(methods).forEach(createMethod);\n\n    this.emit(\"state\", \"state:online\");\n    this.emit(\"state:online\");\n  }\n}\n\nclass ConnectionError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"ConnectionError\";\n  }\n}\nMopidy.ConnectionError = ConnectionError;\n\nclass ServerError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"ServerError\";\n  }\n}\nMopidy.ServerError = ServerError;\n\nMopidy.WebSocket = WebSocket;\n\nMopidy.prototype._nextRequestId = (() => {\n  let lastUsed = -1;\n  return () => {\n    lastUsed += 1;\n    return lastUsed;\n  };\n})();\n\nexport default Mopidy;\n","\nimport React from 'react';\n\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\n\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\n\nconst PlaybackButtons = ({state, mopidy}) => {\n    return (\n        <ButtonGroup>\n          <Button onClick={() => mopidy.playback.previous()}>\n            <SkipPreviousIcon fontSize=\"large\"/>\n          </Button>\n\n          {\n              (state === 'playing') ?\n                  <Button onClick={() => mopidy.playback.pause()}>\n                    <PauseIcon fontSize=\"large\"/>\n                  </Button> :\n              <Button onClick={() => mopidy.playback.play()}>\n                <PlayArrowIcon fontSize=\"large\"/>\n              </Button>\n          }\n          <Button onClick={() => mopidy.playback.next()}>\n            <SkipNextIcon fontSize=\"large\"/>\n          </Button>\n        </ButtonGroup>\n    )\n}\n\nexport default PlaybackButtons\n","\nexport const duration_to_human = (ms) => {\n    if (ms === undefined || ms === null) {return '??';}\n\n    const s_total = Math.ceil(ms / 1000);\n    const s = s_total % 60;\n    const m = ((s_total - s) / 60);\n    const s_str = (s < 10 ? '0' + s : '' + s);\n    return `${m}:${s_str}`;\n};\n\nexport const obj_reducer = (obj, prop_name) => obj[prop_name];\n\nexport const arrayEquals = (array1, array2) => (array1.length === array2.length && array1.every((value, index) => value === array2[index]));\n\n\nvar uriHumanList = {\n    'spotify': 'Spotify',\n    'spotifytunigo': 'Spotify browse',\n    'spotifyweb': 'Spotify browse',\n    'local': 'Local media',\n    'm3u': 'Local playlists',\n    'podcast': 'Podcasts',\n    'podcast+itunes': 'iTunes Store: Podcasts',\n    'dirble': 'Dirble',\n    'tunein': 'TuneIn',\n    'soundcloud': 'SoundCloud',\n    'gmusic': 'Google Music',\n    'internetarchive': 'Internet Archive',\n    'somafm': 'Soma FM',\n    'youtube': 'YouTube',\n    'audioaddict': 'AudioAddict',\n    'subsonic': 'Subsonic'\n}\n\n\nconst searchBlacklist = [\n    'file',\n    'http',\n    'https',\n    'mms',\n    'rtmp',\n    'rtmps',\n    'rtsp',\n    'yt'\n]\n\nexport const getSearchUris = (uris) =>\n    uris.filter( uri => !searchBlacklist.includes(uri)).\n    map( (uri) => [uri, uriHumanList[uri] || uri])\n\nexport const getDefaultWS = () => {\n    const schema = window.location.protocol === 'https:' ? 'wss' : 'ws'\n    const host = window.location.hostname\n    const port = 6680\n    return `${schema}://${host}:${port}/mopidy/ws`\n}\n","\nimport React from 'react';\n\nimport Slider from '@material-ui/core/Slider';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport { duration_to_human } from '../../utils';\nconst sliderSteps = 300;\nconst PlaybackSlider = ({time_position, track_length, dispatch, mopidy}) => {\n\n    // console.log(\"steps\", sliderSteps, time_position, track_length);\n    const handleChange = (event, newValue) => {\n        dispatch({\n            type: 'PLAYBACK_INFO',\n            target: 'time_position',\n            data: newValue * track_length / sliderSteps\n        });\n    };\n\n    const handleChangeCommitted = (event, newValue) => {\n        mopidy.playback.seek({time_position: Math.ceil(newValue * track_length / sliderSteps)})\n    };\n\n    if (track_length) {\n        return (\n            <div style={{display: 'flex', flexDirection: 'row',\n                         alignItems: 'center'}}>\n              <div>\n                {duration_to_human(time_position)}\n              </div>\n              <Slider value={time_position / track_length * sliderSteps}\n                      onChange={handleChange}\n                      onChangeCommitted={handleChangeCommitted}\n                      max={sliderSteps}\n                      valueLabelDisplay='auto'\n                      valueLabelFormat={ (args) => duration_to_human(args * track_length / sliderSteps)}\n            style={{flex: 1, marginRight: '5%', marginLeft: '5%'}}\n              />\n              <div>\n                {duration_to_human(track_length)}\n              </div>\n            </div>\n        )\n    } else {\n        return (\n            <div style={{display: 'flex', flexDirection: 'row',\n                         alignItems: 'center' }}>\n              <div>\n                {duration_to_human(time_position)}\n              </div>\n              <LinearProgress style={{flex: 1, marginRight: '5%', marginLeft: '5%'}} />\n            </div>\n        )\n    }\n};\n\nexport default PlaybackSlider\n","\nimport React from 'react'\n\nimport Slider from '@material-ui/core/Slider';\nimport VolumeDown from '@material-ui/icons/VolumeDown'\nimport VolumeUp from '@material-ui/icons/VolumeUp'\n\nimport Button from '@material-ui/core/Button'\n\n\nconst VolumeSlider = ({volume, dispatch, style, mopidy}) => {\n\n    const handleChange = (event, newValue) => {\n        dispatch({\n            type: 'PLAYBACK_INFO',\n            target: 'volume',\n            data: newValue\n        })\n    }\n\n    const handleChangeCommitted = (event, newValue) => {\n        mopidy.mixer.setVolume({volume: newValue})\n    }\n\n    return (\n        <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center', ...style}}>\n          <div><VolumeDown /></div>\n          <div style={{ flex: 1, marginLeft: '5%', marginRight: '5%'}}>\n            <Slider value={volume}\n                    onChange={handleChange}\n                    onChangeCommitted={handleChangeCommitted}\n                    valueLabelDisplay='auto'\n            />\n          </div>\n          <div><VolumeUp /></div>\n        </div>\n\n    )\n}\n\nexport default VolumeSlider\n","import {obj_reducer} from './utils'\n\n\n\n\nexport const fetchPlaybackInfo = async (dispatch, mopidy) => {\n\n    const to_dispatch = [\n        {\n            fun_path: ['playback', 'getCurrentTlTrack'],\n            base: {type: 'PLAYBACK_INFO', target: 'tltrack'}\n        },\n        {\n            fun_path: ['playback', 'getState'],\n            base: {type: 'PLAYBACK_INFO', target: 'state'}\n        },\n        {\n            fun_path: ['playback', 'getTimePosition'],\n            base: {type: 'PLAYBACK_INFO', target: 'time_position'}\n        },\n    ]\n\n\n\n    await Promise.all(to_dispatch.map( async ({fun_path, base}) => {\n        fun_path.reduce((obj, name) => obj[name], mopidy)\n\n        const fun = fun_path.reduce(obj_reducer, mopidy)\n        const res = await fun()\n        dispatch(\n            Object.assign({}, base, {data: res})\n        )\n    }))\n\n}\n\nexport const initMopidyEventsDispatcher = (state, mopidy, dispatch) => {\n    // console.log(\"STATE\", state)\n\n    mopidy.on(\"requests:count\", (value) => {\n              dispatch({\n                  type: 'MOPIDY_PENDING_REQUESTS_COUNT',\n                  data: value\n              })\n    })\n    mopidy.on(\"state:online\", () => {\n        dispatch({\n            type: 'MOPIDY_CLIENT_CONNECTED',\n        })\n        mopidy.tracklist.getTlTracks().then(\n            (data) =>\n                dispatch({\n                    type: 'TRACKLIST_INITIALISE',\n                    data: data\n                }))\n\n        mopidy.mixer.getVolume().then(\n            (volume) =>\n                dispatch({\n                    type: 'PLAYBACK_INFO',\n                    target: 'volume',\n                    data: volume\n                })\n        )\n        mopidy.library.browse({uri: null}).then(\n            library =>\n                dispatch({\n                    type: 'LIBRARY_POPULATE',\n                    target: ['root'],\n                    data: [...library,\n                           {name: \"Playlists\", uri: 'playlist:', type: \"playlists_root\"},\n                           {name: \"Search results\", uri: 'search:', type: 'search_results_root'}\n                          ],\n                }))\n        mopidy.getUriSchemes().then(\n            schemes => dispatch({\n                type: 'URI_SCHEMES',\n                data: schemes\n            })\n        )\n        fetchPlaybackInfo(dispatch, mopidy)\n    })\n\n    mopidy.on(\"state:offline\", () => dispatch({\n        type: 'MOPIDY_CLIENT_DISCONNECTED',\n    }))\n\n    mopidy.on(\"event:trackPlaybackResumed\", (data) => {\n        dispatch({\n            type: 'PLAYBACK_INFO',\n            target: 'state',\n            data: 'playing'\n        })\n        dispatch({\n            type: 'PLAYBACK_INFO',\n            target: 'time_position',\n            data: data.time_position\n        })\n\n    })\n    mopidy.on(\"event:trackPlaybackPaused\", (data) => {\n        dispatch({\n            type: 'PLAYBACK_INFO',\n            target: 'state',\n            data: 'paused'\n        })\n        dispatch({\n            type: 'PLAYBACK_INFO',\n            target: 'time_position',\n            data: data.time_position\n        })\n        dispatch({\n            type: 'INCR_PLAYBACK_RESET'\n        })\n\n    })\n\n    mopidy.on(\"event:seeked\", (data) => {\n        dispatch({\n            type: 'PLAYBACK_INFO',\n            target: 'time_position',\n            data: data.time_position\n        })\n\n    })\n\n    mopidy.on(\"event:trackPlaybackStarted\", (data) => {\n        dispatch({\n            type: 'PLAYBACK_INFO',\n            target: 'track',\n            data: data.track\n        })\n    })\n\n    mopidy.on(\"event:trackPlaybackEnded\", (data) => {\n        dispatch({\n            type: 'PLAYBACK_INFO',\n            target: 'state',\n            data: 'stopped'\n        })\n        dispatch({\n            type: 'PLAYBACK_INFO',\n            target: 'time_position',\n            data: data.time_position\n        })\n    })\n\n    mopidy.on(\"event:trackPlaybackStarted\", (data) => {\n        dispatch({\n            type: 'PLAYBACK_INFO',\n            target: 'state',\n            data: 'playing'\n        })\n        dispatch({\n            type: 'PLAYBACK_INFO',\n            target: 'time_position',\n            data: 0\n        })\n        dispatch({\n            type: 'PLAYBACK_INFO',\n            target: 'tltrack',\n            data: data.tl_track\n        })\n\n    })\n\n    mopidy.on(\"event:tracklistChanged\", () => {\n        mopidy.tracklist.getTlTracks().then(\n            (data) =>\n                dispatch({\n                    type: 'TRACKLIST_INITIALISE',\n                    data: data\n                }))\n        fetchPlaybackInfo(dispatch, mopidy)\n    })\n}\n\n\nconst makeMopidyDispatcher = (fun_path, base) => {\n\n    return () => {\n        return function(dispatch, getState) {\n            const mopidy = getState().mopidy\n            const fun = fun_path.reduce(obj_reducer, mopidy)\n            fun().then(\n                (res) => {\n                    dispatch(\n                        Object.assign({}, base, {data: res})\n                    )\n                }\n            )\n        }\n    }\n}\n\nexport const dispatchTrackInfo = makeMopidyDispatcher(\n    ['playback', 'getCurrentTrack'], {type: 'PLAYBACK', target: 'track'} )\nexport const dispatchPlayState = makeMopidyDispatcher(\n    ['playback', 'getState'], {type: 'PLAYBACK', target: 'state'})\nexport const dispatchTimePosition = makeMopidyDispatcher(\n    ['playback', 'getTimePosition'], {type: 'PLAYBACK', target: 'time_position'})\n\n\n\n","\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport PlaybackButtons from './playbackButtons.js'\nimport PlaybackSlider from './playbackSlider.js'\nimport VolumeSlider from './volumeSlider.js'\n\nimport { dispatchPlaybackInfo } from '../../actions';\n\nimport { duration_to_human, obj_reducer } from '../../utils';\n\n\n\n\nconst TrackInfo = ({track}) => {\n    if (!track) return '...'\n\n    // console.log(\"TrackInfo\",track);\n    const name = (\n        (track.name) ?\n            <div>{track.name}</div>:\n        null\n    )\n    const album = (\n        (track.album) ?\n            <div>{track.album.name}</div> :\n        null\n    )\n    const artist = (\n        (track.artists) ?\n            <div>{track.artists[0].name}</div> :\n        null\n    )\n    if (track.album) {}\n    return (\n        <div style={{display: 'flex',  flexDirection:\"column\"}}>\n          {name}\n          {album}\n          {artist}\n        </div>)\n}\n\n\nlet Footer = ({tltrack, state, time_position,\n               time_position_updater, updating, volume,\n               seek_update_interval,\n               mopidy, dispatch}) =>\n    {\n\n\n        if (state === 'playing' && typeof(time_position) === 'number' &&\n            !time_position_updater.pending){\n            dispatch({type: 'INCR_PLAYBACK_START'});\n            setTimeout(() => dispatch({type: 'INCR_PLAYBACK'}), seek_update_interval);\n        }\n\n        return (\n            <div style={{width: '80%', margin: 'auto', display: 'flex', flexDirection: 'row'}}>\n              <div style={{display: 'flex', flexDirection: 'column'}}>\n                <PlaybackButtons state={state} mopidy={mopidy}/>\n                <VolumeSlider volume={volume} dispatch={dispatch} mopidy={mopidy}\n                              style={{marginTop: 'auto', marginBottom: 'auto'}}/>\n              </div>\n              <div style={{display: 'flex', flexDirection: 'column',\n                           flex: 1,\n                           paddingLeft: '5%', paddingRight: '5%'}}>\n                <TrackInfo track={tltrack.track}/>\n                <PlaybackSlider time_position={time_position}\n                                track_length={tltrack.track ? tltrack.track.length : null}\n                                dispatch={dispatch}\n                                mopidy={mopidy}\n                />\n                <div/>\n              </div>\n            </div>\n            )\n    };\n\n\nconst getPlaybackState = (state) => {\n    return {...state.playback_state, mopidy: state.mopidy.mopidy,\n            seek_update_interval: state.settings.persistant.seek_update_interval\n           }};\nFooter = connect(getPlaybackState)(Footer);\nexport default Footer;\n","import React, {useState, useRef, useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ListIcon from '@material-ui/icons/List';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport Popover from '@material-ui/core/Popover';\nimport TextField from '@material-ui/core/TextField';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport {getSearchUris} from '../utils.js'\n\nconst SearchPopOver = ({mopidy, searchUris, dispatch, closePopover}) => {\n\n\n    const initialSelecterUri = localStorage.getItem(\"searchSelectedURI\") || \"all\"\n\n    const [selectedUri, setSelectedUri] = useState(initialSelecterUri)\n    const [input, setInput] = useState('')\n\n    const triggerSearch = (key) => {\n        if (key !== 'Enter') return \n        if (input.length === 0) return\n\n        const uri = (selectedUri === \"all\") ? {} : {uris: [selectedUri + ':']}\n        // console.log(\"Search:\",  {query: {any: input}, ...uri})\n        mopidy.library.search({query: {any: input}, ...uri}).then(\n            search_result => {\n\n                const children = search_result.map(\n                    item => ({...item, name: item.uri, children: item.tracks,\n                              type: 'search_result', expanded: true}))\n                dispatch({\n                    type: 'LIBRARY_ADD_CHILDREN',\n                    data: children,\n                    target: ['root','search:'],\n                })\n                dispatch({\n                    type: 'LIBRARY_SET_EXPANDED',\n                    target: ['root', 'search:'],\n                    data: true\n                })\n            }\n        )\n        closePopover()\n    }\n\n    return (\n        <div>\n          <TextField id='search-popover-textinput'\n                     variant=\"outlined\"\n                     value={input} onChange={(event) => setInput(event.target.value)}\n                     onKeyPress={event => triggerSearch(event.key)}\n                     autoFocus={true}\n          />\n          <FormControl variant=\"outlined\">\n            <Select\n              native\n              value={selectedUri}\n              onChange={ (event) => {\n                  localStorage.setItem(\"searchSelectedURI\", event.target.value)\n                  setSelectedUri(event.target.value)}}\n              onKeyPress={event => triggerSearch(event.key)}\n            >\n              <option value={\"all\"}>All</option>\n              {\n                  searchUris.map(\n                      ([uri, uriHuman]) => <option value={uri} key={uri}>{uriHuman}</option>)\n              }\n            </Select>\n          </FormControl>\n        </div>)\n}\n\n\nconst MopidyStatus = ({pendingRequestsNb, connected}) => {\n\n    if (!connected)\n        return (\n            <div>\n              <CircularProgress size={30}\n                                thickness={5}\n                                style={{marginTop: '10px', marginBottom: '10px'}}\n                                color=\"secondary\"\n              />\n            </div>\n        )\n    if (pendingRequestsNb === 0)\n        return (\n            <div>\n              <CircularProgress size={30}\n                                thickness={5}\n                                style={{marginTop: '10px', marginBottom: '10px'}}\n                                variant=\"determinate\" value={100}\n              />\n            </div>\n        )\n\n    return (\n        <div>\n          <CircularProgress size={30}\n                            thickness={5}\n                            style={{marginTop: '10px', marginBottom: '10px'}}\n          />\n        </div>\n    )\n}\n\n\nconst SidePanel = ({dispatch, mopidy, uri_schemes, pendingRequestsNb, connected}) => {\n\n    const anchorEl = useRef(null)\n    const [open, setOpen] = useState(false)\n    \n    const searchUris = getSearchUris(uri_schemes)\n\n    return (\n        <>\n          <ButtonGroup orientation='vertical'>\n            <MopidyStatus pendingRequestsNb={pendingRequestsNb}\n                          connected={connected}\n            />\n\n            <Button style={{height: 'auto'}}\n                    onClick={\n                        () =>\n                            dispatch({\n                                type: 'ACTIVATE_PANEL',\n                                target: 'control'\n                            })\n                    }\n            >\n              <SettingsIcon/>\n            </Button>\n            <Button onClick={\n                () => dispatch({\n                    type: 'ACTIVATE_PANEL',\n                    target: 'library'\n                    \n                })}>\n              <ListIcon/>\n            </Button>\n            <Button ref={anchorEl}\n                    id='popover-search-button'\n                    onClick={() => setOpen(true)}\n            >\n              <SearchIcon/>\n            </Button>\n            <Popover\n              id=\"search-popover\"\n              open={open}\n              anchorEl={anchorEl.current}\n              onClose={() => setOpen(false)}\n              anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n              }}\n              transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'left',\n              }}\n            >\n              <SearchPopOver searchUris={searchUris} mopidy={mopidy}\n                             dispatch={dispatch} closePopover={() => setOpen(false)} />\n            </Popover>\n        </ButtonGroup>\n        </>\n    )\n}\n\nexport default connect(state => state.mopidy )(SidePanel)\n","\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { ReactSortable } from \"react-sortablejs\";\n\n\nimport Button from '@material-ui/core/Button';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\n\nimport ClearIcon from '@material-ui/icons/Clear';\n\n\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\n\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n\nconst tracklistSwap = (e, mopidy) => {\n    // console.log(e)\n    mopidy.tracklist.move({start: e.oldIndex, end: e.oldIndex, to_position: e.newIndex})\n}\n\nconst itemToText = (item) => {\n    try {\n        return `${item.track.album.name} / ${item.track.track_no}. ${item.track.name}`\n    }\n    catch (e) {\n        return item.track.name || item.track.uri\n    }\n}\n\nlet TracklistListPanel = ({dispatch, tracklist, current_tlid, mopidy}) => {\n    // console.log(\"Tracklist\", tracklist, current_tlid);\n    return (\n             <ReactSortable\n               list={tracklist}\n               setList={() => {}}\n               tag={List}\n               style={{overflow: 'auto', maxHeight: '100%', padding: 0}}\n               group={{name: 'tracklist', pull: true, put: ['library']}}\n               onEnd={(e) => tracklistSwap(e, mopidy)}\n\n               id='tracklist'\n             >\n               {tracklist.map(item => (\n                   <ListItem\n                     key={item.tlid}\n                   className={(item.tlid === current_tlid) ?\n                   \"tracklist_current\" : \"\" }\n\n                     style={{padding: 0}}\n                   >\n                     {(item.tlid === current_tlid) ?\n                      <AudiotrackIcon fontSize=\"small\"/>\n                      : ''\n\n                     }\n                     <ListItemText>\n                       {itemToText(item)}\n                     </ListItemText>\n                     <ListItemIcon>\n                       <ButtonGroup>\n                       <Button onClick={() => mopidy.playback.play({tlid: item.tlid})}>\n                         <PlayArrowIcon fontSize=\"small\"/>\n                       </Button>\n                       <Button onClick={() => mopidy.tracklist.remove({\n                           criteria: {tlid: [item.tlid]}\n                       })}>\n                         <ClearIcon fontSize=\"small\"/>\n                       </Button></ButtonGroup>\n                     </ListItemIcon>\n                   </ListItem>\n              ))}\n            </ReactSortable>\n    );\n};\n\nconst TracklistInfoPanel = ({tracklist, mopidy}) => {\n    return <div>\n             {tracklist.length} tracks\n             <Tooltip title=\"Clear playlist\">\n               <Button onClick={() => mopidy.tracklist.clear()}>\n                 <ClearAllIcon fontSize=\"small\"/>\n               </Button>\n             </Tooltip>\n           </div>\n}\n\n\nlet TracklistPanel = ({tracklist, current_tlid, dispatch, mopidy}) => {\n\n    return (\n        <div style={{display: 'flex', flexDirection: 'column', height: '100%'}}>\n          <TracklistInfoPanel\n            tracklist={tracklist}\n            mopidy={mopidy}\n          />\n          <TracklistListPanel tracklist={tracklist}\n                              current_tlid={current_tlid}\n                              dispatch={dispatch}\n                              mopidy={mopidy}\n                              style={{overflow: 'auto', height: '100%', maxHeight: '100%'}}\n          />\n        </div>\n    )\n}\n\n\n\nconst getTracklistState = (state) => {\n\n    return {tracklist: state.tracklist,\n            current_tlid: (state.playback_state.tltrack) ? state.playback_state.tltrack.tlid : null,\n            mopidy: state.mopidy.mopidy\n           };};\nTracklistPanel = connect(getTracklistState)(TracklistPanel);\n\nexport default TracklistPanel;\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { ReactSortable } from \"react-sortablejs\";\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport Button from '@material-ui/core/Button';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\n\n\nimport IconButton from '@material-ui/core/IconButton';\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\n\nconst isLeaf = (node) => node.type === \"track\" || node.__model__ === \"Track\"\n\nconst toggleNode = (node, dispatch, mopidy) => {\n    // node does not toggle\n    if (node.type === 'track' || node.__model__ === 'Track') return\n\n\n    // console.log(\"toggle\", node)\n\n    switch (node.type) {\n\n    case 'playlists_root':\n        mopidy.playlists.asList().then(\n            playlists => dispatch({\n                type: 'LIBRARY_POPULATE',\n                target: node.path,\n                data: playlists\n            })\n        )\n        break\n\n    case 'playlist':\n        // console.log(\"toggle\", node)\n        mopidy.playlists.getItems({uri: node.uri}).then(\n            items => dispatch({\n                type: 'LIBRARY_POPULATE',\n                target: node.path,\n                data: items || []\n            })\n        )\n        break\n\n    case 'search_results_root':\n        break\n\n    case 'search_result':\n        break\n\n    default:\n        mopidy.library.browse({uri: node.uri}).then(\n            (children) => dispatch({\n                type: 'LIBRARY_POPULATE',\n                target: node.path,\n                data: children\n            }))\n    }\n\n    dispatch({\n        type: 'LIBRARY_TOGGLE_EXPANDED',\n        target: node.path\n    })\n}\n\nconst isValidTrackUri = async(uri, mopidy) => {\n    const res = await mopidy.library.lookup({uris: [uri]})\n    const track =  res[uri][0]\n    return track.length !== undefined\n}\n\n\nconst rec_expand_file = async(lib_items, mopidy) => {\n\n    if (lib_items.length === 0) return []\n    // console.log(\"Expanding \", lib_items)\n\n\n    const res = await Promise.all(lib_items.map(\n        async (lib_item) =>\n            {\n                if (isLeaf(lib_item)) {\n                    return lib_item.uri\n                    // const is_valid = await isValidTrackUri(lib_item.uri, mopidy)\n                    // return (is_valid) ? lib_item.uri : null\n                }\n                else {\n                    // console.log(\"Browsing\", lib_item)\n\n                    switch (lib_item.type) {\n                    case 'playlist':\n                        if (!lib_item.children) {\n                            const children = await mopidy.playlists.getItems({uri: lib_item.uri})\n                            // console.log(\"pl children\", children)\n                            return children.map(item => item.uri)\n                        } else {\n                            return lib_item.children.map(item => item.uri)\n                        }\n\n                    case 'search_result':\n                        return lib_item.children.map(item => item.uri)\n\n                    default:\n\n                        let uri_expanded = await mopidy.library.browse({uri: lib_item.uri})\n                        // console.log(lib_item, \"browsed to \", uri_expanded)\n                        if (uri_expanded.length === 0 && lib_item.children) {\n                            uri_expanded = lib_item.children\n                        }\n                        return await rec_expand_file(uri_expanded, mopidy)\n                    }\n                  }\n            }))\n    // console.log(\"Expanded\", res.flat())\n    return res.flat()\n}\n\n\nconst expand_file = async (lib_item, mopidy) => {\n    let data_raw = (await rec_expand_file([lib_item], mopidy))\n    // console.log('Returning', data_raw)\n\n    // filter on track length ??\n    const data = data_raw.filter( i => (i !== null))\n    return data\n}\n\n\nconst addToTracklist = async (lib_item, at_position, mopidy) => {\n    // console.log(\"Add to tracklist:\", lib_item)\n    // if (lib_item.uri.startsWith(\"file:\" || lib_item.uri)) {\n    if (isLeaf(lib_item))\n        mopidy.tracklist.add({uris: [lib_item.uri], at_position})\n    else {\n        const uris = await expand_file(lib_item, mopidy)\n        await mopidy.tracklist.add({uris: uris, at_position})\n    }\n    // }\n}\n\nconst dropTo = (lib_item, at_position, to_object, mopidy) => {\n\n    if (to_object.id === 'tracklist') \n        addToTracklist(lib_item, at_position, mopidy)\n}\n\nconst NodeLeaves = ({item, dispatch, mopidy, depth, tl_length, disable_buttons=false}) => {\n    // console.log(\"Node item\", item)\n\n    if (!item.expanded) return null\n    if (item.children === undefined) return null\n\n    const getIcon = (child) => {\n        if (!isLeaf(child)) {\n            if (child.expanded) {\n                return <ExpandLessIcon style={{verticalAlign: 'text-bottom'}}/>\n            } else {return <ExpandMoreIcon style={{verticalAlign: 'text-bottom'}}/>}\n        } else return ''\n    }\n\n    const getChildrenNb = (node) => {\n        if (isLeaf(node)) return ''\n        if (node.children === undefined) return '(?)'\n        return `(${node.children.length})`\n    }\n\n\n    return (\n          <ReactSortable\n            group={{name: 'library', put: false, pull: \"clone\" }}\n            list={item.children}\n            /* setList={()=>{console.log(\"setlist\")}} */\n            setList={()=>{}}\n            tag={List}\n            onEnd={(e) => {dropTo(item.children[e.oldIndex], e.newIndex, e.to, mopidy)}}\n            style={{paddingLeft: (depth * 10) + 'px', }}\n          >\n            {\n                item.children.map(child => (\n                    <React.Fragment key={child.uri}>\n                      <ListItem key={child.uri} style={{paddingTop: 0, paddingBottom: 0}}>\n                        <ListItemText onClick={() => toggleNode(child, dispatch, mopidy)}>\n                          {child.name}\n                          {getChildrenNb(child)}\n                          {getIcon(child)}\n                        </ListItemText>\n                        {\n                            (disable_buttons) ? null :\n                                <ListItemIcon>\n                                  <ButtonGroup size=\"small\">\n                                    <Tooltip title=\"Play now !\">\n                                      <Button onClick={() => {\n                                          mopidy.tracklist.clear()\n                                          addToTracklist(child, 0, mopidy).then(\n                                              () => mopidy.playback.play()\n                                          )\n                                      }}>\n                                        <PlaylistPlayIcon />\n                                      </Button></Tooltip>\n                                    <Tooltip title=\"Add to tracklist\">\n                                      <Button onClick={() => {\n                                          addToTracklist(child, tl_length, mopidy)\n                                      }}>\n                                        <PlaylistAddIcon/>\n                                      </Button></Tooltip>\n                                  </ButtonGroup>\n                                </ListItemIcon>\n                        }\n                      </ListItem>\n                      <NodeLeaves item={child} dispatch={dispatch}\n                                  mopidy={mopidy} depth={depth+1}/>\n                    </React.Fragment>\n                ))\n            }\n          </ReactSortable>\n    )\n}\n\nlet LibraryPanel = ({library, playlists, tl_length, dispatch, mopidy}) => {\n\n    const lib_tree = library.lib_tree\n    if (!lib_tree) return null\n    if (lib_tree.length === 0) return null\n    // console.log(\"Lib:\", lib_tree)\n\n\n    return <NodeLeaves item={lib_tree} dispatch={dispatch}\n                       mopidy={mopidy} depth={0} tl_length={tl_length}\n                       style={{overflow: 'auto', height: '100%'}}\n                       disable_buttons={true}\n           />\n}\n\nexport default connect((state) => {\n    return {library: state.library,\n            mopidy: state.mopidy.mopidy,\n            tl_length: state.tracklist.length,\n            playlists: state.playlists\n           }})(LibraryPanel)\n\n","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst ControlPanel = ({persistant, dispatch}) => {\n\n\n    const [mopidy_ws, set_mopidy_ws] =\n          useState(persistant.mopidy_ws);\n\n    const [seek_update_interval, set_seek_update_interval] =\n          useState(persistant.seek_update_interval);\n\n    return (\n        <div>\n          <form noValidate autoComplete=\"off\">\n            <TextField\n              label=\"Mopidy websocket URL\"\n              variant=\"outlined\"\n              style={{margin: 8, width: '80%'}}\n              InputLabelProps={{\n                  shrink: true,\n              }}\n              value={mopidy_ws}\n              onChange={(event) => set_mopidy_ws(event.target.value)}\n            />\n             <TextField\n              label=\"Seek update interval\"\n              variant=\"outlined\"\n              style={{margin: 8}}\n              InputLabelProps={{\n                  shrink: true,\n              }}\n              value={seek_update_interval}\n              onChange={(event) => set_seek_update_interval(event.target.value)}\n            />\n\n          </form>\n\n          <Button onClick={() => {\n              dispatch({\n                  type: 'COMMIT_PERSISTANT',\n                  data: {\n                      mopidy_ws,\n                      seek_update_interval\n                  }\n              })\n              dispatch({type: 'CONNECT', mopidy_ws, dispatch})\n          }\n                          }>\n            Commit</Button>\n\n        </div>\n    )\n\n\n}\n\nexport default connect(state => state.settings)(ControlPanel)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\n\nimport Grid from '@material-ui/core/Grid'\n\nimport './App.css'\nimport Footer from './components/footer'\n\nimport SidePanel from './components/sidePanel.js'\nimport TracklistPanel from './components/tracklist.js'\nimport LibraryPanel from './components/library.js'\nimport ControlPanel from './components/controlPanel.js'\n\nimport {initMopidyEventsDispatcher} from './actions'\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nlet AppContainer = ({children}) => (\n\n    <div className=\"App\"\n         style={{display: 'flex', flexDirection: 'column',\n                 height:'100%', overflow: 'hidden'}}>\n      <div style={{display: 'flex', flexDirection: 'row', flex: '0',  minHeight: '0', flex: 1}}>\n        <SidePanel/>\n        {children}\n      </div>\n      <Footer style={{display: 'flex', flex: 1, }}/>\n    </div>\n\n)\n\nlet App = ({settings, mopidy, dispatch}) => {\n    // console.log(\"Main: \", settings)\n    if (!mopidy.connected && !mopidy.connecting && !mopidy.error) {\n        dispatch({type: 'CONNECT', mopidy_ws: settings.persistant.mopidy_ws, dispatch})\n    }\n    let activePanel = null\n    switch (settings.active_panel) {\n    case 'control':\n        activePanel = <ControlPanel/>\n        break\n    default:\n        activePanel = <LibraryPanel/>\n    }\n\n    if (mopidy.connected) {\n        return (\n            <AppContainer>\n              <div style={{height: '100%', width: '100%', flexDirection: 'row', display: 'flex'}}>\n                <div style={{ width: '50%', height: '100%', overflow: 'auto'}}>\n                  {activePanel}\n                </div>\n                <div style={{height: '100%', width: '50%'}}>\n                  <TracklistPanel/>\n                </div>\n              </div>\n            </AppContainer>\n        ) } else {\n            return (\n                <AppContainer>\n                  <div style={{ width: '50%', height: '100%', overflow: 'auto'}}>\n                    <ControlPanel/>\n                  </div>\n\n                  <div style={{display: 'flex', flexDirection: 'column'}}>\n                    <div style={{flex: 1}}/>\n                    <div style={{flex: 1}}><CircularProgress color=\"inherit\"\n                                                             style={{margin: 'auto'}}\n                                           /></div>\n                    <div style={{flex: 1}}>\n                      <div>Trying to reach mopidy at {settings.persistant.mopidy_ws}</div>\n                      <div>{mopidy.error}</div>\n                    </div>\n                    <div style={{flex: 1}}/>\n                  </div>\n                </AppContainer>\n            )\n        }\n\n    return (\n        <div className=\"App\"\n             style={{display: 'flex', flexDirection: 'column',\n                     height:'100%', overflow: 'hidden'}}>\n          <div style={{display: 'flex', flexDirection: 'row', flex: '0',  minHeight: '0', flex: 1}}>\n            <SidePanel/>\n            <div style={{height: '100%', width: '100%', flexDirection: 'row', display: 'flex'}}>\n              <div style={{ width: '50%', height: '100%', overflow: 'auto'}}>\n                {activePanel}\n              </div>\n              <div style={{height: '100%', width: '50%'}}>\n                <TracklistPanel/>\n              </div>\n            </div>\n          </div>\n          <Footer style={{display: 'flex', flex: 1, }}/>\n        </div>\n  )\n}\n\nexport default connect(state => {return {settings: state.settings, mopidy: state.mopidy}})(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport { createStore, applyMiddleware, combineReducers, compose } from 'redux'\n// import { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nimport Mopidy from \"./mopidy-js/mopidy.js\"\n\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport {initMopidyEventsDispatcher} from './actions'\nimport { obj_reducer, getDefaultWS } from './utils'\n\n\nconst default_playback = {\n    tltrack: {\n        track: null,\n        tlid: null\n    },\n    state: null,\n    time_position: null,\n    updating: false,\n    time_position_updater: {\n        pending: false,\n        last_update: null\n    },\n    volume: null\n}\n\nconst playbackReducer = (state = default_playback, action) => {\n    switch (action.type) {\n    case 'PLAYBACK_INFO':\n        const res_target = {}\n        res_target[action.target] = action.data\n        if (action.target === 'tltrack' && !action.data){\n            // console.log(\"Setting \", action.data, \"to tltrack\")\n            res_target[action.target] = {track: null, tlid: null}}\n        let res = Object.assign({}, state, res_target)\n\n        if (action.target === 'time_position') {\n            res.time_position_updater.last_update = (new Date()).valueOf()\n        }\n\n        return res\n    case 'INCR_PLAYBACK_START':\n        const time_position_updater_new = Object.assign(\n            {}, state.time_position_updater, {pending: true})\n        return Object.assign(\n            {}, state, {time_position_updater: time_position_updater_new})\n    case 'INCR_PLAYBACK':\n        const now = (new Date()).valueOf()\n        const elapsed = now - state.time_position_updater.last_update\n        if (state.state !== 'playing') return state\n        return { ...state,\n                 time_position: state.time_position + elapsed,\n                 time_position_updater: {\n                     pending: false,\n                     last_update: now\n                 }\n               }\n    case 'INCR_PLAYBACK_RESET':\n        return { ...state,\n                 time_position_updater: {\n                     pending: false,\n                     last_update: null\n                 }\n               }\n\n    case 'PLAYBACK_UPDATING':\n        return { ...state, updating: action.data}\n    default:\n        return state\n    }\n}\n\nconst tracklistReducer = (state=[], action) => {\n    switch (action.type) {\n    case 'TRACKLIST_INITIALISE':\n        return action.data\n    default:\n        return state\n    }\n}\n\nconst lib_populate = (node, target, children, path) => {\n\n    if (target[0] === node.uri) {\n\n        // console.log(\"lib_populate\", node, target, children, path)\n        if (target.length === 1) {\n\n            // console.log(\"match:\", node)\n            const children_w_path = children.map(\n                (child) =>\n                    Object.assign(child, {path: [...path, child.uri]}))\n            return { ...node, children: children_w_path}\n\n        } else {\n            return {\n                ...node,\n                children: node.children.map(\n                    (child) =>\n                        lib_populate(child, target.slice(1), children, path))\n            }}\n    } else {return node}\n}\n\n\nconst lib_add_children = (node, target, children, path, mode) => {\n    if (target[0] === node.uri) {\n\n        // console.log(\"lib_add_children\", node, target, children, path)\n        if (target.length === 1) {\n\n            // console.log(\"match:\", node)\n            const children_w_path = children.map(\n                child => {return {...child, path: [...path, child.uri]}}\n            )\n            const prev_children = node.children || []\n            let new_children = []\n            switch (mode) {\n            case \"before\":\n                new_children = [...children_w_path, ...prev_children]\n                break\n            case \"after\":\n                new_children = [...prev_children, ...children_w_path]\n            default:\n                new_children = children_w_path\n            }\n            return {...node, children: new_children}\n        } else {\n            return {\n                ...node,\n                children: node.children.map(\n                    (child) =>\n                        lib_add_children(child, target.slice(1), children, path, mode))\n            }}\n    } else {return node}\n}\n\nconst lib_toggle_expanded = (node, target) => {\n    // console.log(\"lib_toggle\", node, target)\n\n    if (target[0] === node.uri) {\n\n        if (target.length === 1) {\n            // console.log(\"match:\", node)\n            return { ...node, expanded: !node.expanded}\n        } else {\n\n\n            if (node.children === undefined) return node\n            return { ...node,\n                     children: node.children.map(\n                         (child) =>\n                             lib_toggle_expanded(child, target.slice(1)))\n                   }\n\n        }\n    } else {return node}\n}\n\nconst lib_set_expanded = (node, target, value) => {\n    // console.log(\"lib_toggle\", node, target)\n\n    if (target[0] === node.uri) {\n\n        if (target.length === 1) {\n            // console.log(\"match:\", node)\n            return { ...node, expanded: value}\n        } else {\n\n\n            if (node.children === undefined) return node\n            return { ...node,\n                     children: node.children.map(\n                         (child) =>\n                             lib_set_expanded(child, target.slice(1), true))\n                   }\n        }\n    } else {return node}\n}\n\n\n\nconst libraryReducer = (state={lib_tree:\n                               {uri: 'root', children: [], expanded: true, path: ['root']},\n                               selected_uri: null,\n                              },\n                        action) =>\n      {\n    let new_lib_tree = null;\n    switch (action.type) {\n\n    case 'LIBRARY_POPULATE':\n        new_lib_tree = lib_populate(state.lib_tree, action.target,\n                                    action.data, action.target)\n        // console.log(\"new lib tree\", new_lib_tree)\n        return { ...state, lib_tree: new_lib_tree}\n\n    case 'LIBRARY_ADD_CHILDREN':\n        new_lib_tree = lib_add_children(state.lib_tree, action.target,\n                                        action.data, action.target,\n                                        action.mode)\n        // console.log(\"new lib tree\", new_lib_tree)\n        return { ...state, lib_tree: new_lib_tree}\n\n\n    case 'LIBRARY_TOGGLE_EXPANDED':\n        new_lib_tree = lib_toggle_expanded(state.lib_tree, action.target)\n        return { ...state, lib_tree: new_lib_tree }\n\n    case 'LIBRARY_SET_EXPANDED':\n        new_lib_tree = lib_set_expanded(state.lib_tree, action.target, action.data)\n        return { ...state, lib_tree: new_lib_tree }\n\n\n    default:\n        return state\n    }\n}\n\n\nconst persistantSettings = JSON.parse(localStorage.getItem(\"settings\")) || {\n    mopidy_ws: getDefaultWS(),\n    seek_update_interval: 1000\n}\nconst defaultSettings = {\n    active_panel: 'library',\n    persistant: persistantSettings,\n}\n\nconst settingsReducer = (state=defaultSettings, action) => {\n    switch (action.type) {\n    case 'ACTIVATE_PANEL':\n        return {...state, active_panel: action.target}\n\n    case 'COMMIT_PERSISTANT':\n        localStorage.setItem(\"settings\", JSON.stringify(action.data))\n        // console.log(\"Set\", state.persistant)\n        return {...state, persistant: action.data}\n\n    default:\n        return state\n    }\n}\n\n\n\nconst mopidyReducer = (state={\n    connected: false,\n    connecting: false,\n    mopidy: null,\n    uri_schemes: [],\n    pendingRequestsNb: 0,\n    error: null\n}, action) => {\n    switch (action.type) {\n    case 'MOPIDY_CLIENT_CONNECTED':\n        return {...state, connected: true, connecting: false}\n\n    case 'MOPIDY_CLIENT_DISCONNECTED':\n        return {...state, connected: false, connecting: true}\n\n    case 'MOPIDY_PENDING_REQUESTS_COUNT':\n        return {...state, pendingRequestsNb: action.data}\n\n    case 'CONNECT':\n\n        if (! action.dispatch || ! action.mopidy_ws) {\n            const error = \"dispatch and mopidy_host must be passed at CONNECT\"\n            console.log(\"ERROR: \"+ error) \n            return {...state, error, connecting: true}\n        }\n\n        const webSocketUrl = action.mopidy_ws\n\n        console.log(\"webSocketUrl:\", webSocketUrl)\n\n        if (state.mopidy) {\n            state.mopidy.removeAllListeners()\n            state.mopidy.close()\n            state.mopidy.off()\n        }\n        const mopidy = new Mopidy({webSocketUrl, autoConnect: false}) \n        try {\n            mopidy.connect()\n        } catch(error) {\n            console.log(\"Error when initializing mopidy\", error)\n            mopidy.removeAllListeners()\n            mopidy.close()\n            mopidy.off()\n            initMopidyEventsDispatcher(state, mopidy, action.dispatch)\n            return {...state, error: error.toString(), mopidy, connecting: false}\n        }\n\n        window.$mopidy=mopidy\n        // console.log(\"Connecting to \", webSocketUrl)\n        initMopidyEventsDispatcher(state, mopidy, action.dispatch)\n        return {...state, connecting: true, mopidy, connected: false, error: null}\n\n    case 'URI_SCHEMES':\n        return {...state, uri_schemes: action.data}\n\n    default:\n        return state\n\n    }\n}\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n// const logger = createLogger()\nconst store = createStore(\n    combineReducers({\n        playback_state: playbackReducer,\n        tracklist: tracklistReducer,\n        library: libraryReducer,\n        settings: settingsReducer,\n        mopidy: mopidyReducer\n    }),\n    composeEnhancers(\n        applyMiddleware(\n            thunk,\n            // logger\n        ),\n    )\n)\n\nwindow.$store = store\n\nReactDOM.render(\n    <Provider store={store} style={{height: '100%'}}>\n      <App />\n    </Provider>\n    , document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}